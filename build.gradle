buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:gradlePlugin:1.6.0"
  }
}

plugins {
	id "java-library"
	id "maven"
	id "eclipse"
	id "maven-publish"
	id "jacoco"
	id "com.github.spotbugs" version "1.6.0"
}

wrapper.gradleVersion = '4.4.1'

def getVersionName = { ->
	def version =  "0.0.2"
	println "Version to build: " + version
	return version
}

println "Project Details"
println "=========================================="
println "Project to build: " + rootProject.name
version = getVersionName()

group 'net.raumzeitfalle.fx.filechooser'

def artifact = 'fxfilechooser'
def companyName = 'www.raumzeitfalle.net'
def implementationTitle = 'FXFileChooser'

println "\nArtifact Details:"
println "=========================================="
println "groupId:     " + group
println "artifactId:  " + artifact
println "verion:      " + version

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {  
    mavenCentral()
    mavenLocal()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

jar {
	archiveName "raumzeitfalle-fxfilechooser-${version}.jar"
	manifest {
		attributes(
			"Built-By" : companyName,
			"Implementation-Title": implementationTitle,
			"Implementation-Version": version,
			"Specification-Version": version
		 )
	}
}

tasks.withType(Test) {
	ignoreFailures = true
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${reporting.baseDir}/${name}")
    }
}


tasks.withType(com.github.spotbugs.SpotBugsTask) {
  ignoreFailures = true
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	groupId group
        	artifactId artifact
        	version version
            from components.java
        }
    }
    repositories {
	   mavenLocal()
      }
   }

